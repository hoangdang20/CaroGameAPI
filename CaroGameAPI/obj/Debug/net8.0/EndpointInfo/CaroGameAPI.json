{
  "openapi": "3.0.1",
  "info": {
    "title": "CaroGameAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/GameMatches": {
      "get": {
        "tags": [
          "GameMatches"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameMatches"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameMatches"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameMatches"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameMatches"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameMatches"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GameMatches"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GameMatches"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GameMatches"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMatches"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMatches"
                }
              }
            }
          }
        }
      }
    },
    "/api/GameMatches/{id}": {
      "get": {
        "tags": [
          "GameMatches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GameMatches"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMatches"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMatches"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GameMatches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameMatches"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GameMatches"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GameMatches"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "GameMatches"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Moves": {
      "get": {
        "tags": [
          "Moves"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Moves"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Moves"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Moves"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Moves"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Moves"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Moves"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Moves"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Moves"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moves"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moves"
                }
              }
            }
          }
        }
      }
    },
    "/api/Moves/{id}": {
      "get": {
        "tags": [
          "Moves"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Moves"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moves"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moves"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Moves"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Moves"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Moves"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Moves"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Moves"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Rankings": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ranking"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ranking"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ranking"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rankings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ranking"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ranking"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ranking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              }
            }
          }
        }
      }
    },
    "/api/Rankings/{id}": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rankings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ranking"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ranking"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ranking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Rankings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Rooms": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rooms"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rooms"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rooms"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Rooms"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rooms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rooms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Rooms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Rooms"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rooms"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rooms"
                }
              }
            }
          }
        }
      }
    },
    "/api/Rooms/{id}": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Rooms"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rooms"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rooms"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rooms"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Rooms"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Rooms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GameMatches": {
        "required": [
          "player1ID",
          "player2ID",
          "roomId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roomId": {
            "type": "string",
            "format": "uuid"
          },
          "room": {
            "$ref": "#/components/schemas/Rooms"
          },
          "player1ID": {
            "type": "string",
            "format": "uuid"
          },
          "player1": {
            "$ref": "#/components/schemas/Users"
          },
          "player2ID": {
            "type": "string",
            "format": "uuid"
          },
          "player2": {
            "$ref": "#/components/schemas/Users"
          },
          "winnerID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "winner": {
            "$ref": "#/components/schemas/Users"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "moves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Moves"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Moves": {
        "required": [
          "matchID",
          "playerID",
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "matchID": {
            "type": "string",
            "format": "uuid"
          },
          "gameMatch": {
            "$ref": "#/components/schemas/GameMatches"
          },
          "playerID": {
            "type": "string",
            "format": "uuid"
          },
          "player": {
            "$ref": "#/components/schemas/Users"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Ranking": {
        "required": [
          "draw",
          "eloRating",
          "lose",
          "userID",
          "win"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userID": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/Users"
          },
          "win": {
            "type": "integer",
            "format": "int32"
          },
          "lose": {
            "type": "integer",
            "format": "int32"
          },
          "draw": {
            "type": "integer",
            "format": "int32"
          },
          "eloRating": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Rooms": {
        "required": [
          "isPublic",
          "ownerID",
          "roomCode",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roomCode": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "ownerID": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "$ref": "#/components/schemas/Users"
          },
          "passwordRoom": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean"
          },
          "status": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMatches"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Users": {
        "required": [
          "email",
          "passwordHash",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "passwordHash": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "eloRating": {
            "type": "integer",
            "format": "int32"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownedRooms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rooms"
            },
            "nullable": true
          },
          "matchesAsPlayer1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMatches"
            },
            "nullable": true
          },
          "matchesAsPlayer2": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMatches"
            },
            "nullable": true
          },
          "matchesAsWinner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMatches"
            },
            "nullable": true
          },
          "ranking": {
            "$ref": "#/components/schemas/Ranking"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}